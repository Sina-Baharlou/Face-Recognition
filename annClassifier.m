% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
% Created Fri Feb 27 17:42:35 CET 2015
%
% This script assumes these variables are defined:
%
%   p - input data.
%   t - target data.

function [n, p] = annClassifier(inputs, targets, hiddenLayerSize)
 
    % Create a Fitting Network
    net = fitnet(hiddenLayerSize);
 
    % Setup Division of Data for Training, Validation, Testing
    net.divideParam.trainRatio = 70 / 100;
    net.divideParam.valRatio = 15 / 100;
    net.divideParam.testRatio = 15 / 100;
 
    % Train the Network
    [net, tr] = train(net, inputs, targets);
 
    % Test the Network
    outputs = net(inputs);
    errors = gsubtract(targets, outputs);
    performance = perform(net, targets, outputs);
    p = performance;
    
    % View the Network
    view(net)
 
    % Plots
    % Uncomment these lines to enable various plots.
    % figure, plotperform(tr)
    % figure, plottrainstate(tr)
    % figure, plotfit(net,inputs,targets)
    % figure, plotregression(targets,outputs)
    % figure, ploterrhist(errors)
    n = net;
